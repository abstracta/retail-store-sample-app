# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
services:
  ui:
    ports:
      - 8888:8080
    environment:
      - JAVA_OPTS=-XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom
      - SERVER_TOMCAT_ACCESSLOG_ENABLED=true
      - ENDPOINTS_CATALOG=http://catalog:8080
      - ENDPOINTS_CARTS=http://carts:8080
      - ENDPOINTS_ORDERS=http://orders:8080
      - ENDPOINTS_CHECKOUT=http://checkout:8080
      - ENDPOINTS_ASSETS=http://assets:8080
    hostname: ui
    build: ../../src/ui
    restart: always
    mem_limit: 512m
    cap_drop:
      - ALL
    networks:
      - retail-network
    depends_on:
      oap:
        condition: service_healthy

  catalog:
    hostname: catalog
    build: ../../src/catalog
    restart: always
    environment:
      - GIN_MODE=release
      - DB_PASSWORD=${MYSQL_PASSWORD}
    mem_limit: 128m
    cap_drop:
      - ALL
    networks:
      - retail-network
    depends_on:
      oap:
        condition: service_healthy

  catalog-db:
    image: mariadb:10.9
    hostname: catalog-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=sampledb
      - MYSQL_USER=catalog_user
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    mem_limit: 128m
    networks:
      - retail-network

  carts:
    hostname: carts
    build: ../../src/cart
    restart: always
    environment:
      - JAVA_OPTS=-XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom
      - SERVER_TOMCAT_ACCESSLOG_ENABLED=true
      - SPRING_PROFILES_ACTIVE=dynamodb
      - CARTS_DYNAMODB_ENDPOINT=http://carts-db:8000
      - CARTS_DYNAMODB_CREATETABLE=true
      - AWS_ACCESS_KEY_ID=key
      - AWS_SECRET_ACCESS_KEY=dummy
    mem_limit: 256m
    cap_drop:
      - ALL
    networks:
      - retail-network
    depends_on:
      oap:
        condition: service_healthy

  carts-db:
    image: amazon/dynamodb-local:1.20.0
    hostname: carts-db
    restart: always
    mem_limit: 256m
    networks:
      - retail-network

  orders:
    hostname: orders
    build: ../../src/orders
    restart: always
    environment:
      - JAVA_OPTS=-XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom
      - SERVER_TOMCAT_ACCESSLOG_ENABLED=true
      - RETAIL_ORDERS_MESSAGING_PROVIDER=rabbitmq
      - SPRING_DATASOURCE_URL=jdbc:postgresql://orders-db:5432/orders
      - SPRING_DATASOURCE_USERNAME=orders_user
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_RABBITMQ_HOST=rabbitmq
    mem_limit: 512m
    cap_drop:
      - ALL
    networks:
      - retail-network
    depends_on:
      oap:
        condition: service_healthy

  orders-db:
    image: postgres:16.1
    hostname: orders-db
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - reschedule=on-node-failure
      - POSTGRES_PASSWORD=${MYSQL_PASSWORD}
      - POSTGRES_DB=orders
      - POSTGRES_USER=orders_user
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d orders -U orders_user"]
      interval: 10s
      timeout: 5s
      retries: 30
    mem_limit: 128m
    networks:
      - retail-network

  checkout:
    build: ../../src/checkout
    hostname: checkout
    restart: always
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - REDIS_URL=redis://checkout-redis:6379
      - ENDPOINTS_ORDERS=http://orders:8080
    mem_limit: 256m
    cap_drop:
      - ALL
    networks:
      - retail-network
    depends_on:
      oap:
        condition: service_healthy

  checkout-redis:
    image: redis:6-alpine
    hostname: checkout-redis
    restart: always
    mem_limit: 128m
    networks:
      - retail-network

  assets:
    hostname: assets
    environment:
      - PORT=8080
    build: ../../src/assets
    restart: always
    mem_limit: 64m
    cap_drop:
      - ALL
    networks:
      - retail-network
    depends_on:
      oap:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - retail-network

  oap:
      image: apache/skywalking-oap-server:latest
      container_name: oap
      ports:
        - 11800:11800
        - 12800:12800
      environment:
        - SW_STORAGE=elasticsearch
        - SW_STORAGE_ES_CLUSTER_NODES=es:9200
        - SW_HEALTH_CHECKER=default
      depends_on:
        es:
          condition: service_healthy
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:12800/healthcheck || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 10
      networks:
        - retail-network

  skywalking-ui:
    image: apache/skywalking-ui:latest
    container_name: skywalking-ui
    ports:
      - 8081:8080
    environment:
      - SW_OAP_ADDRESS=http://oap:12800
    depends_on:
      oap:
        condition: service_healthy
    networks:
      - retail-network

  es:
    image: elasticsearch:7.17.25
    container_name: es
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - retail-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d 
    depends_on:
      - oap
    networks:
      - retail-network

volumes:
  es-data:

networks:
  retail-network:
    driver: bridge